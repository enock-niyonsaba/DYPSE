version: '3.8'

services:
  # DYPSE Application
  dypse:
    build: .
    ports:
      - "3000:3000"  # Client
      - "5000:5000"  # Server
    environment:
      - NODE_ENV=production
      - PORT=5000
      - CLIENT_PORT=3000
    env_file:
      - .env
    volumes:
      - ./uploads:/app/uploads
      - ./apps/server/prisma:/app/apps/server/prisma
    depends_on:
      - postgres
      - mongodb
    restart: unless-stopped
    networks:
      - dypse-network

  # PostgreSQL Database (Supabase alternative)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=dypse
      - POSTGRES_USER=dypse_user
      - POSTGRES_PASSWORD=dypse_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./apps/server/supabase-schema.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - dypse-network
    restart: unless-stopped

  # MongoDB for document storage
  mongodb:
    image: mongo:7.0
    environment:
      - MONGO_INITDB_DATABASE=dypse
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - dypse-network
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dypse-network
    restart: unless-stopped

  # Nginx for production reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - dypse
    networks:
      - dypse-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
  mongodb_data:
  redis_data:

networks:
  dypse-network:
    driver: bridge
